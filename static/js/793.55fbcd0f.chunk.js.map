{"version":3,"file":"static/js/793.55fbcd0f.chunk.js","mappings":"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","sources":["components/Title/Title.styled.jsx","components/Title/Title.jsx","pages/Categories/Axios/AxiosGetCategories.js","pages/Categories/Axios/AxiosGetResieptsFromCategory.js","pages/Categories/Styled/CategoriesList.styled.js","pages/Categories/Styled/CategoriesListItem.styled.js","pages/Categories/Styled/CategoriesTable.styled.js","components/RecipeCard/Recipecard.styled.js","components/RecipeCard/Recipecard.jsx","pages/Categories/CategoriesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport sq_black_6 from '../../images/Title/sq_black_6.png';\nimport sq_black_12 from '../../images/Title/sq_black_12.png';\nimport sq_green_8 from '../../images/Title/sq_green_8.png';\nimport sq_green_14 from '../../images/Title/sq_green_14.png';\nimport white_circle from '../../images/Title/white-circle.png';\nimport white_rect from '../../images/Title/white-rectangle.png';\n\nexport const TitleConteiner = styled.div`\n  height: 192px;\n  margin: 0 auto;\n  box-sizing: border-box;\n  width: 100%;\n  padding-top: 114px;\n  background-repeat: no-repeat;\n  background-image: url(${sq_green_8}),\n    ${p => (p.dark ? `url(${white_circle})` : `url(${sq_black_6})`)},\n    url(${sq_green_8});\n  background-size: 10px 10px, 7px 7px, 10px 10px;\n  background-position: top 80px left 104px, top 145px left 231px,\n  top 112px left 329px;\n  @media screen and (min-width: 768px) {\n    height: 240px;\n    padding-top: 136px;\n    background-image: url(${sq_green_14}),\n      ${p => (p.dark ? `url(${white_rect})` : `url(${sq_black_12})`)},\n      url(${sq_green_14});\n    background-repeat: no-repeat;\n    background-size: 18px 18px, 15px 15px, 18px 18px;\n    background-position: top 91px left 187px, top 160px left 405px, top 104px left 682px;\n  }\n  @media screen and (min-width: 1440px) {\n    background-image: url(${sq_green_14}),\n      ${p => (p.dark ? `url(${white_rect})` : `url(${sq_black_12})`)},\n      url(${sq_green_14});\n    height: 308px;\n    padding-top: 164px;\n    background-position: top 122px left 228px, top 205px left 707px, top 135px left 1150px;\n  }\n  h2 {\n    font-style: normal;\n    font-weight: 600;\n    font-size: 28px;\n    line-height: 28px;\n    letter-spacing: -0.02em;\n    font-feature-settings: 'liga' off;\n    color: ${p => p.theme.colors.sectionTitle};\n  \n    \n    @media screen and (min-width: 768px) {\n      font-size: 32px;\n      line-height: 1;\n    }\n    @media screen and (min-width: 1440px) {\n      font-size: 44px;\n      line-height: 1;\n    }\n  }\n`;\n\n","import { TitleConteiner } from './Title.styled';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\n\nconst Title = ({ children }) => {\n   const darkMode = useSelector(state => state.theme);\n  \n  return (\n    <TitleConteiner dark={darkMode.darkMode}>\n      <h2>{children}</h2>\n    </TitleConteiner>\n  );\n};\n\nexport default Title;\n","import axios from 'axios';\n\n// const token =\n//   'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0M2RhYjA2ODJhZGUzMDA2ZjY3ZWNhZSIsImlhdCI6MTY4MTc2MzMwNX0.xgcSynbdL8pnbV4_bItE5Tagzj7XVNcGXClp35qD59Q';\n\n// const API = axios.create({\n//   baseURL: 'https://yummy-rest-api.yurgo.fun/api/',\n//   headers: {\n//     Authorization: `Bearer ${token}`,\n//   },\n// });\n\nconst fetchCategoryListFromAPI = async () => {\n  try {\n    const response = await axios.get('/recipes/category-list');\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n    return error.response.data;\n  }\n};\n\nexport default fetchCategoryListFromAPI;\n","import axios from 'axios';\n// https://yummy-rest-api.yurgo.fun/api/recipes/category/:category\n// const token =\n//   'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0M2RhYjA2ODJhZGUzMDA2ZjY3ZWNhZSIsImlhdCI6MTY4MTc2MzMwNX0.xgcSynbdL8pnbV4_bItE5Tagzj7XVNcGXClp35qD59Q';\n\n// const API = axios.create({\n//   baseURL: 'https://yummy-rest-api.yurgo.fun/api/',\n//   headers: {\n//     Authorization: `Bearer ${token}`,\n//   },\n// });\nconst fetchRecipesFromCategory = async category => {\n  try {\n    const response = await axios.get(`recipes/category/${category}`);\n\n    const result = response.data.result.map(recip => {\n      return {\n        id: recip._id,\n        name: recip.title,\n        preview: recip.preview\n          ? recip.preview\n          : ' https://via.placeholder.com/350x350.png?text=No+Image',\n      };\n    });\n    return result;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport default fetchRecipesFromCategory;\n","import styled from 'styled-components';\n\nexport const CategoriesList = styled.div`\n  border-bottom: 1px solid #e0e0e0;\n  height: auto;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  color: #bdbdbd;\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  gap: 28px;\n  white-space: nowrap;\n  overflow-x: auto;\n  scrollbar-width: 2px;\n  padding-left: 29px;\n\n  @media screen and (min-width: 768px) {\n    font-family: 'Poppins';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 18px;\n    color: #bdbdbd;\n    gap: 55px;\n    padding-left: 19px;\n  }\n  @media screen and (min-width: 1440px) {\n  }\n\n  /* Add custom scrollbar */\n  scrollbar-color: transparent;\n  scrollbar-width: 2px;\n\n  /* Style the track */\n  &::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n\n  /* Style the thumb */\n  &::-webkit-scrollbar-thumb {\n    background-color: transparent;\n  }\n\n  .active {\n    color: #8baa36;\n    border-bottom: 2px solid #8baa36;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledNavLink = styled(NavLink)`\n  position: relative;\n  color: #bdbdbd;\n  text-decoration: none;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  padding-bottom: 32px;\n  @media screen and (min-width: 768px) {\n    padding-bottom: 28px;\n  }\n  @media screen and (min-width: 1440px) {\n  }\n\n  &.active {\n    color: #8baa36;\n    border-bottom: 2px solid #8baa36;\n  }\n\n  &:hover {\n    color: #8baa36;\n    border-bottom: 2px solid #8baa36;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ConteinerCategoriListStyled = styled.div`\n  margin-top: 32px;\n  @media screen and (min-width: 768px) {\n    margin-top: 50px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 50px;\n  }\n`;\n\nexport const CategoriesCardSet = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 28px;\n  margin-top: 32px;\n  @media screen and (min-width: 768px) {\n    gap: 0;\n    margin: calc(-1 * 32px / 2);\n    margin-top: 50px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin: calc(-1 * 14px / 2);\n  }\n`;\nexport const CategoriesCardSetItem = styled.li`\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 32px * 2) / 2);\n    margin: calc(32px / 2);\n  }\n  @media screen and (min-width: 1440px) {\n    flex-basis: calc((100% - 14px * 4) / 4);\n    margin: calc(14px / 4);\n    margin-bottom: 100px;\n\n    :nth-last-child(-n + 4) {\n      margin-bottom: 0;\n    }\n  }\n`;\nexport const CardStyled = styled.div`\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 32px * 2) / 2);\n    margin: calc(32px / 2);\n  }\n  @media screen and (min-width: 1440px) {\n    flex-basis: calc((100% - 32px * 4) / 4);\n    margin: calc(32px / 4);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  min-width: 343px;\n  min-height: 323px;\n  padding-top: 245px;\n  padding-bottom: 15px;\n  background-image: url(${props => props.imageUrl});\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 8px;\n  @media screen and (min-width: 768px) {\n    min-width: 336px;\n    min-height: 323px;\n  }\n  @media screen and (min-width: 1440px) {\n    min-width: 300px;\n    min-height: 323px;\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  background-color: ${p => p.theme.colors.cardBackground};\n  width: 307px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  justify-content: left;\n  align-items: center;\n\n  border-radius: 8px;\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 268px;\n  }\n`;\n\nexport const Name = styled.h3`\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 20px;\n  align-content: center;\n  color: ${p => p.theme.colors.primaryText};\n  padding: 16px;\n  @media screen and (min-width: 768px) {\n  }\n  @media screen and (min-width: 1440px) {\n  }\n`;\n","import React from 'react';\nimport { CardWrapper, ImageWrapper, Name } from './Recipecard.styled';\n\nconst ProductCard = ({ imageUrl, name }) => {\n  return (\n    <CardWrapper imageUrl={imageUrl}>\n      <ImageWrapper>\n        <Name>{name}</Name>\n      </ImageWrapper>\n    </CardWrapper>\n  );\n};\n\n\n\nexport default ProductCard;","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useLocation, useNavigate } from 'react-router-dom';\nimport fetchCategoryListFromAPI from './Axios/AxiosGetCategories';\nimport fetchRecipesFromCategory from './Axios/AxiosGetResieptsFromCategory';\nimport { CategoriesList } from './Styled/CategoriesList.styled';\nimport { StyledNavLink } from './Styled/CategoriesListItem.styled';\nimport {\n  CategoriesCardSet,\n  CategoriesCardSetItem,\n  ConteinerCategoriListStyled,\n} from './Styled/CategoriesTable.styled';\nimport ProductCard from '../../components/RecipeCard/Recipecard';\nimport Title from 'components/Title';\nimport { Loader } from 'components/Loader/Loader';\n\nconst CategoriesPage = () => {\n  const { categoryName } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [categories, setCategories] = useState([]);\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentCategory, setCurrentCategory] = useState(\n    categoryName || 'Beef'\n  );\n\n  // activeStyle\n\n  useEffect(() => {\n    setIsLoading(true);\n    try {\n      fetchCategoryListFromAPI().then(data => {\n        setCategories(data.categoryList);\n      });\n\n      setIsLoading(false);\n    } catch (error) {\n      console.error(error);\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    setIsLoading(true);\n    try {\n      fetchRecipesFromCategory(currentCategory).then(data => {\n        setRecipes(data);\n      });\n      setIsLoading(false);\n    } catch (error) {\n      console.error(error);\n      setIsLoading(false);\n    }\n    console.log();\n  }, [currentCategory]);\n\n  useEffect(() => {\n    if (!location.state || !location.state.fromMenu) {\n      navigate(`/categories/${currentCategory}`);\n    }\n  }, [currentCategory, navigate, location.state]);\n\n  const handleCategoryClick = category => {\n    setCurrentCategory(category);\n  };\n\n  return (\n    <>\n      <div>\n        <Title>Categories</Title>\n        <CategoriesList>\n          {isLoading ? (\n            <div>Loading...</div>\n          ) : (\n            categories.map(category => (\n              <StyledNavLink\n                to={`/categories/${category}`}\n                key={category}\n                onClick={() => handleCategoryClick(category)}\n              >\n                {category}\n              </StyledNavLink>\n            ))\n          )}\n        </CategoriesList>\n      </div>\n      <div>\n        {isLoading && <p>Loading recipes...</p>}\n        {!isLoading && recipes.length > 0 && (\n          <ConteinerCategoriListStyled>\n            <CategoriesCardSet>\n              {recipes.map(recipe => (\n                <CategoriesCardSetItem key={recipe.id}>\n                  <Link to={`/recipe/${recipe.id}`}>\n                    <ProductCard imageUrl={recipe.preview} name={recipe.name} />\n                  </Link>\n                </CategoriesCardSetItem>\n              ))}\n            </CategoriesCardSet>\n          </ConteinerCategoriListStyled>\n        )}\n        {isLoading && (\n          <div\n            style={{\n              margin: '30px 0px',\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Loader />\n          </div>\n        )}\n        {!isLoading && recipes.length === 0 && (\n          <p>No recipes found for this category</p>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default CategoriesPage;\n"],"names":["TitleConteiner","styled","sq_green_8","p","dark","sq_green_14","white_rect","sq_black_12","theme","colors","sectionTitle","children","darkMode","useSelector","state","fetchCategoryListFromAPI","axios","response","data","console","log","message","fetchRecipesFromCategory","category","result","map","recip","id","_id","name","title","preview","Error","CategoriesList","StyledNavLink","NavLink","ConteinerCategoriListStyled","CategoriesCardSet","CategoriesCardSetItem","CardWrapper","props","imageUrl","ImageWrapper","cardBackground","Name","primaryText","categoryName","useParams","location","useLocation","navigate","useNavigate","useState","categories","setCategories","recipes","setRecipes","isLoading","setIsLoading","currentCategory","setCurrentCategory","useEffect","then","categoryList","error","fromMenu","Title","to","onClick","handleCategoryClick","length","recipe","style","margin","display","justifyContent","Loader"],"sourceRoot":""}